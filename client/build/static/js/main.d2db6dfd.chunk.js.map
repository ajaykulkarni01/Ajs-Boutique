{"version":3,"sources":["utils/helpers.js","utils/actions.js","utils/reducers.js","utils/GlobalState.js","components/ProductItem/index.js","utils/queries.js","assets/spinner.gif","components/ProductList/index.js","components/HomeCarousel/index.js","pages/Home.js","pages/About.js","pages/Products.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","utils/auth.js","pages/Login.js","pages/Signup.js","pages/Contact.js","components/CartItem/index.js","components/Cart/index.js","components/Header/index.js","components/CategoryMenu/index.js","components/NavHeader/index.js","components/Footer/index.js","pages/Success.js","pages/OrderHistory.js","App.js","serviceWorker.js","index.js"],"names":["pluralize","name","count","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","UPDATE_PRODUCTS","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","UPDATE_CATEGORIES","reducer","state","action","type","products","cartOpen","cart","product","map","purchaseQuantity","newState","filter","length","categories","currentCategory","StoreContext","createContext","Provider","StoreProvider","value","initialState","props","useReducer","dispatch","useStoreContext","useContext","ProductItem","item","image","price","quantity","Col","Card","to","className","alt","src","Body","Title","Text","Footer","Button","onClick","itemInCart","find","cartItem","parseInt","QUERY_PRODUCTS","gql","QUERY_CHECKOUT","QUERY_CATEGORIES","QUERY_USER","ProductList","category","useParams","useQuery","loading","data","useEffect","forEach","then","filteredProducts","Container","Row","xs","md","spinner","HomeCarousel","Carousel","Item","Home","About","fluid","lg","sm","Products","Detail","id","useState","currentProduct","setCurrentProduct","indexedProducts","icon","faStar","disabled","htmlFor","faMinus","defaultValue","faPlus","title","faCartPlus","p","faShoppingCart","faHeart","description","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","role","LOGIN","ADD_ORDER","ADD_USER","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","Login","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","a","preventDefault","variables","mutationResponse","Auth","handleChange","target","onSubmit","Form","Group","Label","Control","placeholder","onChange","variant","Signup","addUser","firstName","lastName","Contact","validated","setValidated","noValidate","currentTarget","checkValidity","stopPropagation","as","required","Feedback","rows","faMapMarker","faPhone","faEnvelope","CartItem","Table","responsive","removeFromCart","faTrashCan","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","getCart","faXmark","sum","toFixed","calculateTotal","loggedIn","productIds","i","push","Header","Nav","Link","href","logout","CategoryMenu","categoryData","NavHeader","Navbar","collapseOnSelect","expand","Brand","Toggle","Collapse","Success","addOrder","setTimeout","saveOrder","Modal","Dialog","closeButton","OrderHistory","user","orders","order","index","bordered","purchaseDate","toLocaleDateString","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"8RAAO,SAASA,EAAUC,EAAMC,GAC9B,OAAc,IAAVA,EACKD,EAEFA,EAAO,IAGT,SAASE,EAAWC,EAAWC,EAAQC,GAC5C,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IACIC,EAAIC,EAAIC,EADNC,EAAUC,OAAOC,UAAUC,KAAK,YAAa,GAEnDH,EAAQI,gBAAkB,SAASC,GACjC,IAAMR,EAAKG,EAAQM,OACnBT,EAAGU,kBAAkB,WAAY,CAAEC,QAAS,QAC5CX,EAAGU,kBAAkB,aAAc,CAAEC,QAAS,QAC9CX,EAAGU,kBAAkB,OAAQ,CAAEC,QAAS,SAG1CR,EAAQS,QAAU,SAASJ,GACzBK,QAAQC,IAAI,uBAGdX,EAAQY,UAAY,SAASP,GAS3B,OARAR,EAAKG,EAAQM,OACbR,EAAKD,EAAGgB,YAAYtB,EAAW,aAC/BQ,EAAQD,EAAGgB,YAAYvB,GAEvBM,EAAGY,QAAU,SAASJ,GACpBK,QAAQC,IAAI,QAASN,IAGfb,GACN,IAAK,MACHO,EAAMgB,IAAItB,GACVE,EAAQF,GACR,MACF,IAAK,MACH,IAAMuB,EAAMjB,EAAMkB,SAClBD,EAAIJ,UAAY,WACdjB,EAAQqB,EAAIV,SAEd,MACF,IAAK,SACHP,EAAMmB,OAAOzB,EAAO0B,KACpB,MACF,QACET,QAAQC,IAAI,mBAIhBb,EAAGsB,WAAa,WACdvB,EAAGwB,a,mBCnDEC,EAAkB,kBAElBC,EAAc,cACdC,EAAuB,uBACvBC,EAAmB,mBAEnBC,EAAuB,uBACvBC,EAAc,cAEdC,EAAoB,oBCKpBC,EAAU,SAACC,EAAOC,GAC7B,OAAQA,EAAOC,MAEb,KAAKV,EACH,OAAO,2BACFQ,GADL,IAEEG,SAAS,YAAKF,EAAOE,YAGzB,KAAKV,EACH,OAAO,2BACFO,GADL,IAEEI,UAAU,EACVC,KAAK,GAAD,mBAAML,EAAMK,MAAZ,CAAkBJ,EAAOK,YAEjC,KAAKZ,EACH,OAAO,2BACFM,GADL,IAEEK,KAAK,GAAD,mBAAML,EAAMK,MAAZ,YAAqBJ,EAAOE,aAIpC,KAAKP,EACH,OAAO,2BACFI,GADL,IAEEI,UAAU,EACVC,KAAML,EAAMK,KAAKE,KAAI,SAACD,GAIpB,OAHIL,EAAOZ,MAAQiB,EAAQjB,MACzBiB,EAAQE,iBAAmBP,EAAOO,kBAE7BF,OAMb,KAAKX,EACH,IAAIc,EAAWT,EAAMK,KAAKK,QAAO,SAACJ,GAChC,OAAOA,EAAQjB,MAAQY,EAAOZ,OAKhC,OAAO,2BACFW,GADL,IAEEI,SAAUK,EAASE,OAAS,EAC5BN,KAAMI,IAGV,ID1DsB,aC2DpB,OAAO,2BACFT,GADL,IAEEI,UAAU,EACVC,KAAM,KAGV,KAAKR,EACH,OAAO,2BACFG,GADL,IAEEI,UAAWJ,EAAMI,WAGrB,KAAKN,EACH,OAAO,2BACFE,GADL,IAEEY,WAAW,YAAKX,EAAOW,cAG3B,IDxEmC,0BCyEjC,OAAO,2BACFZ,GADL,IAEEa,gBAAiBZ,EAAOY,kBAK5B,QACE,OAAOb,I,uBCxFPc,EAAeC,0BACbC,EAAaF,EAAbE,SAEFC,EAAgB,SAAC,GAA6B,EAA3BC,MAA4B,IDyFnBC,ECzFMC,EAAY,iBAClD,GDwFgCD,ECxFY,CAC1ChB,SAAU,GACVE,KAAM,GACND,UAAU,EACVQ,WAAY,GACZC,gBAAiB,IDoFZQ,qBAAWtB,EAASoB,ICzF3B,mBAAOnB,EAAP,KAAcsB,EAAd,KAQA,OAAO,cAACN,EAAD,aAAUE,MAAO,CAAClB,EAAOsB,IAAeF,KAG3CG,EAAkB,WACtB,OAAOC,qBAAWV,I,2BCoDLW,I,UAAAA,EA9Df,SAAqBC,GACnB,MAA0BH,IAA1B,mBAAOvB,EAAP,KAAcsB,EAAd,KAGEK,EAKED,EALFC,MACArE,EAIEoE,EAJFpE,KACA+B,EAGEqC,EAHFrC,IACAuC,EAEEF,EAFFE,MACAC,EACEH,EADFG,SAGMxB,EAASL,EAATK,KAuBR,OAEE,cAACyB,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACA,cAAC,IAAD,CAAMC,GAAE,kBAAa3C,GAArB,SACM,qBAAK4C,UAAU,eACbC,IAAK5E,EACL6E,IAAG,kBAAaR,OAItB,eAACI,EAAA,EAAKK,KAAN,WACE,cAACL,EAAA,EAAKM,MAAN,UAAa/E,IACb,eAACyE,EAAA,EAAKO,KAAN,WACGT,EADH,IACcxE,EAAU,OAAQwE,GADhC,YAEE,mCAAMD,WAIV,cAACG,EAAA,EAAKQ,OAAN,UACE,cAACC,EAAA,EAAD,CAAQP,UAAU,eAAeQ,QAzCvB,WAChB,IAAMC,EAAarC,EAAKsC,MAAK,SAACC,GAAD,OAAcA,EAASvD,MAAQA,KACxDqD,GACFpB,EAAS,CACPpB,KAAMN,EACNP,IAAKA,EACLmB,iBAAkBqC,SAASH,EAAWlC,kBAAoB,IAE5DhD,EAAW,OAAQ,MAAT,YAAC,eACNkF,GADK,IAERlC,iBAAkBqC,SAASH,EAAWlC,kBAAoB,OAG5Dc,EAAS,CACPpB,KAAMT,EACNa,QAAQ,2BAAMoB,GAAP,IAAalB,iBAAkB,MAExChD,EAAW,OAAQ,MAAT,YAAC,eAAoBkE,GAArB,IAA2BlB,iBAAkB,OAwBnD,iC,0BC7DGsC,EAAiBC,YAAH,6PAiBdC,EAAiBD,YAAH,qIAuBdE,GAfqBF,YAAH,6KAeCA,YAAH,uFAShBG,EAAaH,YAAH,iSCnDR,MAA0B,oC,kBC6E1BI,MAlEf,WACE,MAA0B5B,IAA1B,mBAAOvB,EAAP,KAAcsB,EAAd,KACQ8B,EAAaC,cAAbD,SAGR,EAA0BE,YAASR,GAA3BS,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,KAEjBC,qBAAU,WACJD,GACFlC,EAAS,CACPpB,KAAMV,EACNW,SAAUqD,EAAKrD,WAEjBqD,EAAKrD,SAASuD,SAAQ,SAACpD,GACrB9C,EAAW,WAAY,MAAO8C,OAEtBiD,GACV/F,EAAW,WAAY,OAAOmG,MAAK,SAACxD,GAClCmB,EAAS,CACPpB,KAAMV,EACNW,SAAUA,SAIf,CAACqD,EAAMD,EAASjC,IAWnB,IAAMsC,EARCR,GAAyB,QAAbA,EAIVpD,EAAMG,SAASO,QACpB,SAACJ,GAAD,OAAaA,EAAQ8C,SAAS9F,OAAS8F,KAJhCpD,EAAMG,SAWjB,OAHAvB,QAAQC,IAAI+E,GACZhF,QAAQC,IAAImB,EAAMG,UAClBvB,QAAQC,IAAIuE,GAEV,eAACS,EAAA,EAAD,WACE,qBAAK5B,UAAU,oBAAf,SACE,6BAAKmB,MAGNpD,EAAMG,SAASQ,OACd,cAACmD,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAG/B,UAAU,MAA7B,SACG2B,EAAiBrD,KAAI,SAACD,GAAD,OACpB,cAAC,EAAD,CAEEjB,IAAKiB,EAAQjB,IACbsC,MAAOrB,EAAQqB,MACfrE,KAAMgD,EAAQhD,KACdsE,MAAOtB,EAAQsB,MACfC,SAAUvB,EAAQuB,UALbvB,EAAQjB,UAUnB,qEAEDkE,EAAU,qBAAKpB,IAAK8B,EAAS/B,IAAI,YAAe,S,SC5BxCgC,OAzCf,WACE,OACE,eAACC,GAAA,EAAD,WACE,cAACA,GAAA,EAASC,KAAV,UACE,qBACEnC,UAAU,gBACVE,IAAI,qBACJD,IAAI,kBAOR,cAACiC,GAAA,EAASC,KAAV,UACE,qBACEnC,UAAU,gBACVE,IAAI,qBACJD,IAAI,mBAQR,cAACiC,GAAA,EAASC,KAAV,UACE,qBACEnC,UAAU,gBACVE,IAAI,qBACJD,IAAI,sBCbCmC,GAdF,WACX,OACE,gCACE,cAAC,GAAD,IACA,eAACR,EAAA,EAAD,WACA,qBAAK5B,UAAU,oBAAf,SACE,oBAAIA,UAAU,qBAAd,4BAEA,cAAC,EAAD,IAAe,uBAAK,8BC6CbqC,OApDf,WAEE,OACE,cAACT,EAAA,EAAD,CAAWU,OAAK,EAAhB,SACE,cAACV,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAK7B,UAAU,aAAf,UACE,eAACH,EAAA,EAAD,CAAK0C,GAAI,EAAGR,GAAI,EAAGS,GAAI,GAAIxC,UAAU,aAArC,UACE,oBAAIA,UAAU,yCAAd,sBAGA,cAAC6B,EAAA,EAAD,UACI,24BAON,cAAChC,EAAA,EAAD,CAAK0C,GAAI,EAAGR,GAAI,EAAGS,GAAI,GAAIxC,UAAU,aAArC,SACE,qBAAKA,UAAU,cAAf,SACE,qBAAKE,IAAI,uBAAuBD,IAAI,GAAGD,UAAU,0BCGhDyC,GApBE,WAaf,OACE,eAACb,EAAA,EAAD,CAAWU,OAAK,EAAhB,UACE,cAAC,EAAD,IAAe,uBAAK,2B,kBCsWXI,OApWf,WACE,MAA0BpD,IAA1B,mBAAOvB,EAAP,KAAcsB,EAAd,KACQsD,EAAOvB,cAAPuB,GAER,EAA4CC,mBAAS,IAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KAEA,EAA0BzB,YAASR,GAA3BS,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,KAETrD,EAAmBH,EAAnBG,SAAUE,EAASL,EAATK,KA2DlB,OAzDAoD,qBAAU,WAEJtD,EAASQ,OACXoE,EAAkB5E,EAASwC,MAAK,SAACrC,GAAD,OAAaA,EAAQjB,MAAQuF,MAGtDpB,GACPlC,EAAS,CACPpB,KAAMV,EACNW,SAAUqD,EAAKrD,WAGjBqD,EAAKrD,SAASuD,SAAQ,SAACpD,GACrB9C,EAAW,WAAY,MAAO8C,OAIxBiD,GACR/F,EAAW,WAAY,OAAOmG,MAAK,SAACqB,GAClC1D,EAAS,CACPpB,KAAMV,EACNW,SAAU6E,SAIf,CAAC7E,EAAUqD,EAAMD,EAASjC,EAAUsD,IAiCrC,qCACGE,GAAkBzE,EACjB,qBAAK4B,UAAU,uBAAf,SACA,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,uBAAf,SACE,qBACEE,IAAG,kBAAa2C,EAAenD,OAC/BO,IAAK4C,EAAexH,KACpB2E,UAAU,qBAKd,sBAAKA,UAAU,WAAf,UACE,oBAAIA,UAAU,mBAAd,SACC6C,EAAexH,OAGhB,sBAAK2E,UAAU,OAAf,UACE,cAAC,KAAD,CAAiBgD,KAAMC,KAAQjD,UAAU,sBACzC,cAAC,KAAD,CAAiBgD,KAAMC,KAAQjD,UAAU,sBACzC,cAAC,KAAD,CAAiBgD,KAAMC,KAAQjD,UAAU,sBACzC,cAAC,KAAD,CAAiBgD,KAAMC,KAAQjD,UAAU,sBACzC,cAAC,KAAD,CAAiBgD,KAAMC,KAAQjD,UAAU,wBAL3C,IAKqE,IACnE,sBAAMA,UAAU,mBAAhB,yCAIF,qBAAIA,UAAU,iBAAd,UACE,oBAAIA,UAAU,WAAd,0BACA,oBAAIA,UAAU,WAAd,sBACA,oBAAIA,UAAU,WAAd,qBACA,oBAAIA,UAAU,WAAd,8BACA,oBAAIA,UAAU,WAAd,kBACA,qBAAIA,UAAU,WAAd,UACE,sBAAKA,UAAU,+BAAf,UACE,uBACEA,UAAU,mBACV/B,KAAK,QACL5C,KAAK,OACLsH,GAAG,QACHO,UAAQ,IAEV,uBAAOlD,UAAU,mBAAmBmD,QAAQ,QAA5C,kBAIF,sBAAKnD,UAAU,+BAAf,UACE,uBACEA,UAAU,mBACV/B,KAAK,QACL5C,KAAK,OACLsH,GAAG,QACHO,UAAQ,IAEV,uBAAOlD,UAAU,mBAAmBmD,QAAQ,QAA5C,kBAIF,sBAAKnD,UAAU,+BAAf,UACE,uBACEA,UAAU,mBACV/B,KAAK,QACL5C,KAAK,OACLsH,GAAG,UAEL,uBAAO3C,UAAU,mBAAmBmD,QAAQ,QAA5C,kBAIF,sBAAKnD,UAAU,+BAAf,UACE,uBACEA,UAAU,mBACV/B,KAAK,QACL5C,KAAK,OACLsH,GAAG,WAEL,uBAAO3C,UAAU,mBAAmBmD,QAAQ,SAA5C,mBAIF,sBAAKnD,UAAU,+BAAf,UACE,uBACEA,UAAU,mBACV/B,KAAK,QACL5C,KAAK,OACLsH,GAAG,YAEL,uBAAO3C,UAAU,mBAAmBmD,QAAQ,UAA5C,uBAKJ,oBAAInD,UAAU,WAAd,mBACA,qBAAIA,UAAU,WAAd,UACE,wBAAQA,UAAU,kCAAlB,eACA,wBAAQA,UAAU,oCAAlB,eACA,wBAAQA,UAAU,kCAAlB,eACA,wBAAQA,UAAU,iCAAlB,eACA,wBAAQA,UAAU,kCAAlB,eACA,wBAAQA,UAAU,+BAAlB,eACA,wBAAQA,UAAU,+BAAlB,qBAIJ,qBAAKA,UAAU,OAAf,SACE,uBAAMA,UAAU,2BAAhB,cAA6C6C,EAAelD,MAAO,SAErE,sBAAKK,UAAU,YAAf,UACE,qBAAKA,UAAU,2BAAf,SACE,sBAAKA,UAAU,oCAAf,UACE,wBACEA,UAAU,0CACV/B,KAAK,SAFP,SAIE,cAAC,KAAD,CAAiB+E,KAAMI,SAEzB,uBACEnF,KAAK,OACL+B,UAAU,oBACVqD,aAAa,MAEf,wBACErD,UAAU,0CACV/B,KAAK,SAFP,SAIE,cAAC,KAAD,CAAiB+E,KAAMM,cAI7B,yBAAQ9C,QAnKN,WAChB,IAAMC,EAAarC,EAAKsC,MAAK,SAACC,GAAD,OAAcA,EAASvD,MAAQuF,KACxDlC,GACFpB,EAAS,CACPpB,KAAMN,EACNP,IAAKuF,EACLpE,iBAAkBqC,SAASH,EAAWlC,kBAAoB,IAE5DhD,EAAW,OAAQ,MAAT,YAAC,eACNkF,GADK,IAERlC,iBAAkBqC,SAASH,EAAWlC,kBAAoB,OAG5Dc,EAAS,CACPpB,KAAMT,EACNa,QAAQ,2BAAMwE,GAAP,IAAuBtE,iBAAkB,MAElDhD,EAAW,OAAQ,MAAT,YAAC,eAAoBsH,GAArB,IAAqCtE,iBAAkB,OAmJnDN,KAAK,SACL+B,UAAU,gDACVuD,MAAM,cAHR,UAKE,cAAC,KAAD,CAAiBP,KAAMQ,OALzB,kBAOA,yBAAQN,UAAW9E,EAAKsC,MAAK,SAAC+C,GAAD,OAAOA,EAAErG,MAAQyF,EAAezF,OACjEoD,QAtJW,WACrBnB,EAAS,CACPpB,KAAMP,EACNN,IAAKyF,EAAezF,MAGtB7B,EAAW,OAAQ,SAAT,eAAwBsH,KAiJlB5E,KAAK,SACL+B,UAAU,mCACVuD,MAAM,SAJR,UAME,cAAC,KAAD,CAAiBP,KAAMU,OANzB,uBAQA,wBACEzF,KAAK,SACL+B,UAAU,mCACVuD,MAAM,kBAHR,SAKE,cAAC,KAAD,CAAiBP,KAAMW,YAG3B,gCACE,oBAAI3D,UAAU,uBAAd,iCAGA,4BAAI6C,EAAee,uBAIzB,qBAAK5D,UAAU,MAAf,SACE,qBAAKA,UAAU,uBAqHnB,KACHsB,EAAU,qBAAKpB,IAAK8B,EAAS/B,IAAI,YAAe,SC7WxC4D,I,SAAAA,GAVf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OACE,qBACEC,MAAO,CAAEC,OAAQ,IAAKC,MAAO,OAAQC,WAAY,IAAKC,UAAW,UADnE,SAGGL,KCWQM,GAfC,WACd,OACE,8BACE,eAAC,GAAD,WACE,oDACA,6BACE,sBAAMC,KAAK,MAAM,aAAW,+BAA5B,kC,gDCPGC,GAAQxD,YAAH,qMAWLyD,GAAYzD,YAAH,uSAkBT0D,GAAW1D,YAAH,oV,uCCaN,O,4FAzCb,WACE,OAAO2D,KAAOC,KAAKC,c,sBAGrB,WAEE,IAAMC,EAAQF,KAAKC,WACnB,QAASC,IAAUF,KAAKG,eAAeD,K,4BAGzC,SAAeA,GACb,IAEE,OADgBH,KAAOG,GACXE,IAAMC,KAAKC,MAAQ,IAG/B,MAAOC,GACP,OAAO,K,sBAIX,WAEE,OAAOC,aAAaC,QAAQ,c,mBAG9B,SAAMC,GAEJF,aAAaG,QAAQ,WAAYD,GAEjClJ,OAAOoJ,SAASC,OAAO,O,oBAGzB,WAEEL,aAAaM,WAAW,YAExBtJ,OAAOoJ,SAASC,OAAO,S,gBC+CZE,OAhFf,SAAetG,GACb,MAAkCyD,mBAAS,CAAE8C,MAAO,GAAIC,SAAU,KAAlE,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA2BC,aAAYxB,IAAvC,mBAAOyB,EAAP,KAAgBC,EAAhB,KAAgBA,MAEVC,EAAgB,yCAAG,WAAOC,GAAP,kBAAAC,EAAA,6DACvBD,EAAME,iBADiB,kBAGUL,EAAM,CACnCM,UAAW,CAAEX,MAAOE,EAAUF,MAAOC,SAAUC,EAAUD,YAJtC,OAGfW,EAHe,OAMf1B,EAAQ0B,EAAiB/E,KAAKwE,MAAMnB,MAC1C2B,GAAKR,MAAMnB,GAPU,gDASrBjI,QAAQC,IAAR,MATqB,yDAAH,sDAahB4J,EAAe,SAACN,GACpB,MAAwBA,EAAMO,OAAtBpL,EAAR,EAAQA,KAAM4D,EAAd,EAAcA,MACd4G,EAAa,2BACRD,GADO,mBAETvK,EAAO4D,MAIZ,OAEE,cAAC2C,EAAA,EAAD,UAEI,eAACC,EAAA,EAAD,CAAK7B,UAAU,aAAf,UACE,eAACH,EAAA,EAAD,CAAK0C,GAAI,EAAGR,GAAI,EAAGS,GAAI,GAAIxC,UAAU,aAArC,UACA,oBAAIA,UAAU,yCAAd,mBACE,uBAAM0G,SAAUT,EAAhB,UAEI,eAACU,GAAA,EAAKC,MAAN,WACE,cAACD,GAAA,EAAKE,MAAN,CAAY7G,UAAU,OAAtB,2BAEA,cAAC2G,GAAA,EAAKG,QAAN,CAAc9G,UAAU,OAAO3E,KAAK,QAAQ4C,KAAK,QAAQ0E,GAAG,QAAQoE,YAAY,cAAcC,SAAUR,OAI1G,eAACG,GAAA,EAAKC,MAAN,WACI,cAACD,GAAA,EAAKE,MAAN,CAAY7G,UAAU,OAAtB,sBAEA,cAAC2G,GAAA,EAAKG,QAAN,CAAc9G,UAAU,OAAO3E,KAAK,WAAW4C,KAAK,WAAW0E,GAAG,MAAMoE,YAAY,WAAWC,SAAUR,OAG5GR,EACC,cAACW,GAAA,EAAKC,MAAN,UACA,cAACD,GAAA,EAAKtG,KAAN,CAAWL,UAAU,OAArB,uDAEE,KAEJ,uBACA,cAACO,EAAA,EAAD,CAAQ0G,QAAQ,iCAAiChJ,KAAK,SAAtD,sBAMJ,sBAAK+B,UAAU,iBAAf,oCAAuD,cAAC,IAAD,CAAMD,GAAI,UAAV,kCAGzD,cAACF,EAAA,EAAD,CAAK0C,GAAI,EAAGR,GAAI,EAAGS,GAAI,GAAIxC,UAAU,aAArC,SACA,qBAAKA,UAAU,cAAf,SACM,qBACEE,IAAI,0BACJD,IAAI,GACJD,UAAU,wBCkBbkH,OArFf,SAAgB/H,GACd,MAAkCyD,mBAAS,CAAE8C,MAAO,GAAIC,SAAU,KAAlE,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkBC,aAAYtB,IAAvB2C,EAAP,oBAEMlB,EAAgB,yCAAG,WAAOC,GAAP,kBAAAC,EAAA,6DACvBD,EAAME,iBADiB,SAEQe,EAAQ,CACrCd,UAAW,CACTX,MAAOE,EAAUF,MACjBC,SAAUC,EAAUD,SACpByB,UAAWxB,EAAUwB,UACrBC,SAAUzB,EAAUyB,YAPD,OAEjBf,EAFiB,OAUjB1B,EAAQ0B,EAAiB/E,KAAK4F,QAAQvC,MAC5C2B,GAAKR,MAAMnB,GAXY,2CAAH,sDAchB4B,EAAe,SAACN,GACpB,MAAwBA,EAAMO,OAAtBpL,EAAR,EAAQA,KAAM4D,EAAd,EAAcA,MACd4G,EAAa,2BACRD,GADO,mBAETvK,EAAO4D,MAIZ,OACE,cAAC2C,EAAA,EAAD,UAEI,eAACC,EAAA,EAAD,CAAK7B,UAAU,aAAf,UACE,eAACH,EAAA,EAAD,CAAK0C,GAAI,EAAGR,GAAI,EAAGS,GAAI,GAAIxC,UAAU,aAArC,UACA,oBAAIA,UAAU,yCAAd,oBACE,uBAAM0G,SAAUT,EAAhB,UAEI,eAACU,GAAA,EAAKC,MAAN,WACE,cAACD,GAAA,EAAKE,MAAN,CAAY7G,UAAU,OAAtB,yBAEA,cAAC2G,GAAA,EAAKG,QAAN,CAAc9G,UAAU,OAAO3E,KAAK,YAAY4C,KAAK,YAAY0E,GAAG,YAAYoE,YAAY,aAAaC,SAAUR,OAGrH,eAACG,GAAA,EAAKC,MAAN,WACE,cAACD,GAAA,EAAKE,MAAN,CAAY7G,UAAU,OAAtB,wBAEA,cAAC2G,GAAA,EAAKG,QAAN,CAAc9G,UAAU,OAAO3E,KAAK,WAAW4C,KAAK,WAAW0E,GAAG,WAAWoE,YAAY,YAAYC,SAAUR,OAGjH,eAACG,GAAA,EAAKC,MAAN,WACE,cAACD,GAAA,EAAKE,MAAN,CAAY7G,UAAU,OAAtB,2BAEA,cAAC2G,GAAA,EAAKG,QAAN,CAAc9G,UAAU,OAAO3E,KAAK,QAAQ4C,KAAK,QAAQ0E,GAAG,QAAQoE,YAAY,cAAcC,SAAUR,OAI1G,eAACG,GAAA,EAAKC,MAAN,WACI,cAACD,GAAA,EAAKE,MAAN,CAAY7G,UAAU,OAAtB,sBAEA,cAAC2G,GAAA,EAAKG,QAAN,CAAc9G,UAAU,OAAO3E,KAAK,WAAW4C,KAAK,WAAW0E,GAAG,MAAMoE,YAAY,WAAWC,SAAUR,OAG7G,uBACA,cAACjG,EAAA,EAAD,CAAQ0G,QAAQ,iCAAiChJ,KAAK,SAAtD,uBAMJ,sBAAK+B,UAAU,iBAAf,iCAAoD,cAAC,IAAD,CAAMD,GAAI,SAAV,+BAGtD,cAACF,EAAA,EAAD,CAAK0C,GAAI,EAAGR,GAAI,EAAGS,GAAI,GAAIxC,UAAU,aAArC,SACA,qBAAKA,UAAU,cAAf,SACM,qBACEE,IAAI,wBACJD,IAAI,GACJD,UAAU,wBCyBbsH,OA/Ff,WACE,MAAkC1E,oBAAS,GAA3C,mBAAO2E,EAAP,KAAkBC,EAAlB,KAWA,OACE,eAAC5F,EAAA,EAAD,CAAWU,OAAK,EAAhB,UACE,cAACV,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAK7B,UAAU,aAAf,UACE,eAACH,EAAA,EAAD,CAAK0C,GAAI,EAAGR,GAAI,EAAGS,GAAI,GAAIxC,UAAU,aAArC,UACE,oBAAIA,UAAU,yCAAd,wBAGA,eAAC2G,GAAA,EAAD,CACEc,YAAU,EACVF,UAAWA,EACXb,SApBgB,SAACR,IAEE,IADhBA,EAAMwB,cACVC,kBACPzB,EAAME,iBACNF,EAAM0B,mBAGRJ,GAAa,IAUL,UAKE,eAAC3F,EAAA,EAAD,CAAK7B,UAAU,OAAf,UACE,eAAC2G,GAAA,EAAKC,MAAN,CAAYiB,GAAIhI,IAAK0C,GAAI,EAAGR,GAAI,EAAGS,GAAI,GAAvC,UACE,cAACmE,GAAA,EAAKE,MAAN,yBACA,cAACF,GAAA,EAAKG,QAAN,CAAcgB,UAAQ,EAAC7J,KAAK,OAAO8I,YAAY,cAC/C,cAACJ,GAAA,EAAKG,QAAQiB,SAAd,6BAEF,eAACpB,GAAA,EAAKC,MAAN,CAAYiB,GAAIhI,IAAK0C,GAAI,EAAGR,GAAI,EAAGS,GAAI,GAAvC,UACE,cAACmE,GAAA,EAAKE,MAAN,wBACA,cAACF,GAAA,EAAKG,QAAN,CAAcgB,UAAQ,EAAC7J,KAAK,OAAO8I,YAAY,cAC/C,cAACJ,GAAA,EAAKG,QAAQiB,SAAd,gCAGJ,cAAClG,EAAA,EAAD,CAAK7B,UAAU,OAAf,SACE,eAAC2G,GAAA,EAAKC,MAAN,WACE,cAACD,GAAA,EAAKE,MAAN,4BACA,cAACF,GAAA,EAAKG,QAAN,CACE7I,KAAK,QACL8I,YAAY,aACZpE,GAAG,QACHmF,UAAQ,IAEV,cAACnB,GAAA,EAAKG,QAAQiB,SAAd,CAAuB9J,KAAK,UAA5B,iDAKJ,cAAC4D,EAAA,EAAD,UACE,eAAC8E,GAAA,EAAKC,MAAN,CAAY5G,UAAU,OAAtB,UACE,cAAC2G,GAAA,EAAKE,MAAN,uBACA,cAACF,GAAA,EAAKG,QAAN,CAAce,GAAG,WAAWG,KAAM,SAGtC,cAACzH,EAAA,EAAD,CAAQP,UAAU,eAAe/B,KAAK,SAAtC,+BAIJ,cAAC4B,EAAA,EAAD,CAAK0C,GAAI,EAAGR,GAAI,EAAGS,GAAI,GAAIxC,UAAU,aAArC,SACE,qBAAKA,UAAU,cAAf,SACE,qBAAKE,IAAI,yBAAyBD,IAAI,GAAGD,UAAU,uBAK3D,eAAC6B,EAAA,EAAD,CAAK7B,UAAU,0BAAf,UACE,eAACH,EAAA,EAAD,WACE,cAACU,EAAA,EAAD,CAAQP,UAAU,oBAAlB,SACE,cAAC,KAAD,CAAiBgD,KAAMiF,SAEzB,mDACA,6CAEF,eAACpI,EAAA,EAAD,WACE,cAACU,EAAA,EAAD,CAAQP,UAAU,oBAAlB,SACE,cAAC,KAAD,CAAiBgD,KAAMkF,SAEzB,8CACA,uEAEF,eAACrI,EAAA,EAAD,WACE,cAACU,EAAA,EAAD,CAAQP,UAAU,oBAAlB,SACE,cAAC,KAAD,CAAiBgD,KAAMmF,SAEzB,yDACA,mE,wCCbKC,GA3EE,SAAC,GAAc,IAAZ3I,EAAW,EAAXA,KAClB,EAAqBH,IAAZD,EAAT,oBA4BA,OACE,cAACuC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,eAACwG,GAAA,EAAD,CAAOC,YAAU,EAAjB,UACE,gCACE,+BACE,+CACA,8CACA,uCACA,qCACA,6CAGJ,gCACE,+BACE,6BACE,qBAAKpI,IAAG,kBAAaT,EAAKC,OAASO,IAAI,OAEzC,6BAAKR,EAAKpE,OACV,mCAAMoE,EAAKE,SACX,6BACE,uBACE1B,KAAK,SACL8I,YAAY,IACZ9H,MAAOQ,EAAKlB,iBACZyI,SA3CC,SAAC1K,GAChB,IAAM2C,EAAQ3C,EAAEmK,OAAOxH,MACT,MAAVA,GACFI,EAAS,CACPpB,KAAMP,EACNN,IAAKqC,EAAKrC,MAEZ7B,EAAW,OAAQ,SAAT,eAAwBkE,MAElCJ,EAAS,CACPpB,KAAMN,EACNP,IAAKqC,EAAKrC,IACVmB,iBAAkBqC,SAAS3B,KAE7B1D,EAAW,OAAQ,MAAT,YAAC,eAAoBkE,GAArB,IAA2BlB,iBAAkBqC,SAAS3B,YAgCxD,6BACE,uBACEoF,KAAK,MACL,aAAW,QACX7D,QAAS,kBA1DF,SAACf,GACtBJ,EAAS,CACPpB,KAAMP,EACNN,IAAKqC,EAAKrC,MAEZ7B,EAAW,OAAQ,SAAT,eAAwBkE,IAqDL8I,CAAe9I,IAHhC,UAKG,IACD,cAAC,KAAD,CAAiBuD,KAAMwF,OAAe,sBC7DlDC,I,OAAgBC,aAAW,qCA0FlBC,GAxFF,WACX,MAA0BrJ,IAA1B,mBAAOvB,EAAP,KAAcsB,EAAd,KACA,EAAgCuJ,aAAa7H,GAA7C,mBAAO8H,EAAP,KAAsBtH,EAAtB,KAAsBA,KAqBtB,SAASuH,IACPzJ,EAAS,CAAEpB,KAAML,IAyBnB,OA7CA4D,qBAAU,WACJD,GACFkH,GAAc/G,MAAK,SAACqH,GAClBA,EAAIC,mBAAmB,CAAEC,UAAW1H,EAAK2H,SAASC,eAGrD,CAAC5H,IAEJC,qBAAU,WAAM,8CACd,6BAAA2E,EAAA,sEACqB5K,EAAW,OAAQ,OADxC,OACQ6C,EADR,OAEEiB,EAAS,CAAEpB,KAAMR,EAAsBS,SAAS,YAAKE,KAFvD,4CADc,sBAMTL,EAAMK,KAAKM,QAND,WAAD,wBAOZ0K,KAED,CAACrL,EAAMK,KAAKM,OAAQW,IA4BlBtB,EAAMI,SAST,sBAAK6B,UAAU,OAAf,UACE,qBAAKA,UAAU,QAAQQ,QAASsI,EAAhC,SACA,cAAC,KAAD,CAAiB9F,KAAMqG,SAEvB,+CACCtL,EAAMK,KAAKM,OACV,gCACGX,EAAMK,KAAKE,KAAI,SAACmB,GAAD,OACd,cAAC,GAAD,CAAyBA,KAAMA,GAAhBA,EAAKrC,QAGtB,sBAAK4C,UAAU,0BAAf,UACE,6CAAe,uBAAMA,UAAU,aAAhB,cA3CzB,WACE,IAAIsJ,EAAM,EAIV,OAHAvL,EAAMK,KAAKqD,SAAQ,SAAChC,GAClB6J,GAAO7J,EAAKE,MAAQF,EAAKlB,oBAEpB+K,EAAIC,QAAQ,GAsCmCC,GAA/B,UAEdjD,GAAKkD,WACJ,wBAAQjJ,QAtCpB,WACE,IAAMkJ,EAAa,GAEnB3L,EAAMK,KAAKqD,SAAQ,SAAChC,GAClB,IAAK,IAAIkK,EAAI,EAAGA,EAAIlK,EAAKlB,iBAAkBoL,IACzCD,EAAWE,KAAKnK,EAAKrC,QAIzByL,EAAY,CACVxC,UAAW,CAAEnI,SAAUwL,MA4Bf,sBAEA,qCAAO,cAAC,IAAD,CAAM3J,GAAI,SAAV,sBAAP,0BAKN,gFA5BF,cAAC,KAAD,CAAiBiD,KAAMU,KAAgB1D,UAAU,sCAAsCQ,QAASsI,KC7BvFe,OAhCf,WAsBE,OACE,cAACC,GAAA,EAAD,CAAK9J,UAAU,sCAAf,SArBIuG,GAAKkD,WAEL,eAACK,GAAA,EAAD,CAAK9J,UAAU,uBAAf,UACA,cAAC8J,GAAA,EAAIC,KAAL,CAAUC,KAAK,gBAAf,2BACA,cAACF,GAAA,EAAIC,KAAL,CAAUvJ,QAAS,kBAAM+F,GAAK0D,UAAUD,KAAK,IAA7C,oBACA,cAAC,GAAD,OAMA,eAACF,GAAA,EAAD,CAAK9J,UAAU,uBAAf,UACA,cAAC8J,GAAA,EAAIC,KAAL,CAAUC,KAAK,SAAf,mBACA,cAACF,GAAA,EAAIC,KAAL,CAAUC,KAAK,UAAf,oBACA,cAAC,GAAD,UCgCOE,OA5Cf,WACE,MAA0B5K,IAA1B,mBAAOvB,EAAP,KAAcsB,EAAd,KAEQV,EAAeZ,EAAfY,WAER,EAAwC0C,YAASL,GAAzCM,EAAR,EAAQA,QAAe6I,EAAvB,EAAiB5I,KA4BjB,OA1BAC,qBAAU,WACJ2I,GACF9K,EAAS,CACPpB,KAAMJ,EACNc,WAAYwL,EAAaxL,aAE3BwL,EAAaxL,WAAW8C,SAAQ,SAACN,GAC/B5F,EAAW,aAAc,MAAO4F,OAExBG,GACV/F,EAAW,aAAc,OAAOmG,MAAK,SAAC/C,GACpCU,EAAS,CACPpB,KAAMJ,EACNc,WAAYA,SAIjB,CAACwL,EAAc7I,EAASjC,IAUzB,cAACyK,GAAA,EAAD,UACGnL,EAAWL,KAAI,SAACmB,GAAD,OACd,cAACqK,GAAA,EAAI3H,KAAL,CAAUnC,UAAU,WAApB,SACE,cAAC,IAAD,CAAMD,GAAE,oBAAeN,EAAKpE,MAA5B,SAAqCoE,EAAKpE,QADRoE,EAAKpE,Y,UCnBlC+O,OArBf,WAEE,OACE,cAACC,GAAA,EAAD,CAAQrK,UAAU,mBAAmBsK,kBAAgB,EAACC,OAAO,KAA7D,SACA,eAAC3I,EAAA,EAAD,WAEA,cAACyI,GAAA,EAAOG,MAAR,CAAcR,KAAK,IAAnB,6BACA,cAACK,GAAA,EAAOI,OAAR,CAAe,gBAAc,0BAC7B,cAACJ,GAAA,EAAOK,SAAR,CAAiB/H,GAAG,wBAApB,SACE,eAACmH,GAAA,EAAD,CAAK9J,UAAU,wCAAf,UACI,cAAC,GAAD,IACD,cAAC8J,GAAA,EAAIC,KAAL,CAAUC,KAAK,SAAf,sBACA,cAACF,GAAA,EAAIC,KAAL,CAAUC,KAAK,WAAf,mCCiBM1J,GAlCA,kBAAM,yBAAQN,UAAU,oCAAlB,UACjB,qBAAKA,UAAU,iDAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,wBAAf,UACI,oBAAIA,UAAU,iBAAd,yBACA,4QAGJ,oBAAIA,UAAU,kCAEd,sBAAKA,UAAU,wBAAf,UACI,oBAAIA,UAAU,iBAAd,2BACA,qBAAIA,UAAU,gBAAd,UACI,6BAAI,mBAAGgK,KAAK,KAAR,4BACJ,6BAAI,mBAAGA,KAAK,KAAR,kCAIZ,sBAAKhK,UAAU,wBAAf,UACI,oBAAIA,UAAU,iBAAd,uBACA,qBAAIA,UAAU,gBAAd,UACI,6BAAI,mBAAGgK,KAAK,KAAR,wBACJ,6BAAI,mBAAGA,KAAK,KAAR,oCAMpB,sBAAKhK,UAAU,oCAAf,iCACI,mBAAGgK,KAAK,IAAR,yC,SCmBOW,OA5Cf,WACE,MAAmB7E,aAAYvB,IAAxBqG,EAAP,oBAwBA,OAtBApJ,qBAAU,WAAM,8CACd,mCAAA2E,EAAA,sEACqB5K,EAAW,OAAQ,OADxC,UACQ6C,EADR,SAEQF,EAAWE,EAAKE,KAAI,SAACmB,GAAD,OAAUA,EAAKrC,QAE5BsB,OAJf,iCAK2BkM,EAAS,CAAEvE,UAAW,CAAEnI,cALnD,gBAKYqD,EALZ,EAKYA,KACYA,EAAKqJ,SAAS1M,SAEtBuD,SAAQ,SAAChC,GACnBlE,EAAW,OAAQ,SAAUkE,MATnC,QAaEoL,YAAW,WACT3O,OAAOoJ,SAASC,OAAO,OACtB,KAfL,6CADc,uBAAC,WAAD,wBAmBduF,KACC,CAACF,IAGF,eAACG,GAAA,EAAMC,OAAP,WACE,cAACD,GAAA,EAAMlB,OAAP,CAAcoB,aAAW,EAAzB,SACE,cAACF,GAAA,EAAM3K,MAAP,yBAGF,eAAC2K,GAAA,EAAM5K,KAAP,WACE,6DACA,mFCmCO+K,OAnEf,WACE,IACIC,EADI5J,EAASF,YAASJ,GAAlBM,KAOR,OAJIA,IACF4J,EAAO5J,EAAK4J,MAIZ,cAACvJ,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAK7B,UAAU,YAAf,SAEE,cAACH,EAAA,EAAD,UAEDsL,EACC,qCACA,yCAAYA,EAAK/D,UAAjB,IAA6B+D,EAAK9D,SAAlC,wCACA,+CACG8D,EAAKC,OAAO9M,KAAI,SAAC+M,GAAD,OACf,8BACGA,EAAMnN,SAASI,KACd,WAA2CgN,GAA3C,EAAGlO,IAAH,IAAQsC,EAAR,EAAQA,MAAOrE,EAAf,EAAeA,KAAMsE,EAArB,EAAqBA,MAAOiE,EAA5B,EAA4BA,YAA5B,OACE,8BAEE,eAACyE,GAAA,EAAD,CAAOC,YAAU,EAACiD,UAAQ,EAA1B,UACE,gCACE,+BACE,4CACA,+CACA,8CACA,qDACA,4CAGJ,gCACE,+BACE,6BACG,IAAIxG,KACHnE,SAASyK,EAAMG,eACfC,uBAEJ,6BACE,qBACEzL,UAAU,kBACVC,IAAK5E,EACL6E,IAAG,kBAAaR,OAGpB,6BAAKrE,IACL,6BAAKuI,IACL,mCAAMjE,cA5BJ2L,OAHND,EAAMjO,WAyClB,YCzCJsO,I,OAAWC,YAAe,CAC9BC,IAAK,cAGDC,GAAWC,aAAW,SAACC,EAAD,GAAqB,IAAfC,EAAc,EAAdA,QAC1BpH,EAAQM,aAAaC,QAAQ,YACnC,MAAO,CACL6G,QAAQ,2BACHA,GADE,IAELC,cAAerH,EAAK,iBAAaA,GAAU,SAK3CsH,GAAS,IAAIC,IAAa,CAC9BC,KAAMP,GAASQ,OAAOX,IACtBY,MAAO,IAAIC,MA+BEC,OA5Bf,WACE,OACE,cAACC,EAAA,EAAD,CAAgBP,OAAQA,GAAxB,SACE,eAAC,IAAD,WACE,eAAC,EAAD,WACE,cAAC,GAAD,IACA,cAAC,GAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,IAAIC,UAAWxK,KACjC,cAAC,IAAD,CAAOsK,OAAK,EAACC,KAAK,SAASC,UAAWvK,KACtC,cAAC,IAAD,CAAOqK,OAAK,EAACC,KAAK,SAASC,UAAWnH,KACtC,cAAC,IAAD,CAAOiH,OAAK,EAACC,KAAK,UAAUC,UAAW1F,KACvC,cAAC,IAAD,CAAOwF,OAAK,EAACC,KAAK,sBAAsBC,UAAWnK,KACnD,cAAC,IAAD,CAAOiK,OAAK,EAACC,KAAK,WAAWC,UAAWjC,KACxC,cAAC,IAAD,CAAO+B,OAAK,EAACC,KAAK,gBAAgBC,UAAW1B,KAC7C,cAAC,IAAD,CAAOwB,OAAK,EAACC,KAAK,cAAcC,UAAWlK,KAC3C,cAAC,IAAD,CAAOgK,OAAK,EAACC,KAAK,WAAWC,UAAWtF,KACxC,cAAC,IAAD,CAAOsF,UAAWxI,WAItB,cAAC,GAAD,UCxDFyI,GAAcC,QACW,cAA7B5Q,OAAOoJ,SAASyH,UAEa,UAA7B7Q,OAAOoJ,SAASyH,UAEhB7Q,OAAOoJ,SAASyH,SAASC,MACvB,2DAyCJ,SAASC,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTxL,MAAK,SAAA6L,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB1P,QACfqP,UAAUC,cAAcO,YAI1BjR,QAAQC,IACN,iHAKEuQ,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlB5Q,QAAQC,IAAI,sCAGRuQ,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,WAO5BQ,OAAM,SAAA/H,GACLrJ,QAAQqJ,MAAM,4CAA6CA,MC5FjEgI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SDWnB,SAAkBjB,GACvB,GAEE,kBAAmBC,UAAW,CAI9B,GADkB,IAAIiB,IAAIC,GAAwBpS,OAAOoJ,SAAS0E,MACpDuE,SAAWrS,OAAOoJ,SAASiJ,OAIvC,OAGFrS,OAAOsS,iBAAiB,QAAQ,WAC9B,IAAMtB,EAAK,UAAMoB,GAAN,sBAEPzB,KAgEV,SAAiCK,EAAOC,GAEtCsB,MAAMvB,EAAO,CACXlB,QAAS,CAAE,iBAAkB,YAE5BtK,MAAK,SAAAgN,GAEJ,IAAMC,EAAcD,EAAS1C,QAAQ4C,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C1B,UAAUC,cAAc0B,MAAMrN,MAAK,SAAA6L,GACjCA,EAAayB,aAAatN,MAAK,WAC7BxF,OAAOoJ,SAAS2J,eAKpBhC,GAAgBC,EAAOC,MAG1BY,OAAM,WACLpR,QAAQC,IACN,oEAvFAsS,CAAwBhC,EAAOC,GAI/BC,UAAUC,cAAc0B,MAAMrN,MAAK,WACjC/E,QAAQC,IACN,iHAMJqQ,GAAgBC,EAAOC,OCpC/BE,K","file":"static/js/main.d2db6dfd.chunk.js","sourcesContent":["export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open('shop-shop', 1);\n    let db, tx, store;\n    request.onupgradeneeded = function(e) {\n      const db = request.result;\n      db.createObjectStore('products', { keyPath: '_id' });\n      db.createObjectStore('categories', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n    };\n\n    request.onerror = function(e) {\n      console.log('There was an error');\n    };\n\n    request.onsuccess = function(e) {\n      db = request.result;\n      tx = db.transaction(storeName, 'readwrite');\n      store = tx.objectStore(storeName);\n\n      db.onerror = function(e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      tx.oncomplete = function() {\n        db.close();\n      };\n    };\n  });\n}\n","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n","import { useReducer } from 'react';\nimport {\n  UPDATE_PRODUCTS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART,\n} from './actions';\n\n// The reducer is a function that accepts the current state and an action. It returns a new state based on that action.\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    // Returns a copy of state with an update products array. We use the action.products property and spread it's contents into the new array.\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n    // Returns a copy of state, sets the cartOpen to true and maps through the items in the cart.\n    // If the item's `id` matches the `id` that was provided in the action.payload, we update the purchase quantity.\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map((product) => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity;\n          }\n          return product;\n        }),\n      };\n\n    // First we iterate through each item in the cart and check to see if the `product._id` matches the `action._id`\n    // If so, we remove it from our cart and set the updated state to a variable called `newState`\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter((product) => {\n        return product._id !== action._id;\n      });\n\n      // Then we return a copy of state and check to see if the cart is empty.\n      // If not, we set the cartOpen status to  `true`. Then we return an updated cart array set to the value of `newState`.\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState,\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: [],\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen,\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory,\n      };\n\n    // Return the state as is in the event that the `action.type` passed to our reducer was not accounted for by the developers\n    // This saves us from a crash.\n    default:\n      return state;\n  }\n};\n\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState);\n}\n","import React, { createContext, useContext } from \"react\";\nimport { useProductReducer } from './reducers'\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useProductReducer({\n    products: [],\n    cart: [],\n    cartOpen: false,\n    categories: [],\n    currentCategory: '',\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\"\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nimport { Col, Button, Card } from 'react-bootstrap';\n\nfunction ProductItem(item) {\n  const [state, dispatch] = useStoreContext();\n\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n\n  const { cart } = state\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  }\n\n  return (\n   \n    <Col>\n      <Card>\n      <Link to={`/detail/${_id}`}>\n            <img className=\"card-img-top\"\n              alt={name}\n              src={`/images/${image}`}\n            />\n          </Link>\n        {/* <Card.Img variant=\"top\" src={`/images/${image}`} /> */}\n        <Card.Body>\n          <Card.Title>{name}</Card.Title>\n          <Card.Text>\n            {quantity} {pluralize(\"item\", quantity)} in stock\n            <b> ${price}</b>\n          </Card.Text>\n        </Card.Body>\n        \n        <Card.Footer>\n          <Button className=\"button-class\" onClick={addToCart}>Add to cart</Button>\n        </Card.Footer>\n      </Card>\n    </Col>\n     \n  );\n}\n\nexport default ProductItem;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      orders {\n        _id\n        purchaseDate\n        products {\n          _id\n          name\n          description\n          price\n          quantity\n          image\n        }\n      }\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/spinner.689d9a07.gif\";","import React, { useEffect } from \"react\";\nimport ProductItem from \"../ProductItem\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { UPDATE_PRODUCTS } from \"../../utils/actions\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_PRODUCTS } from \"../../utils/queries\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport spinner from \"../../assets/spinner.gif\";\nimport { Container, Row } from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\n\nfunction ProductList() {\n  const [state, dispatch] = useStoreContext();\n  const { category } = useParams();\n  // const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n      data.products.forEach((product) => {\n        idbPromise(\"products\", \"put\", product);\n      });\n    } else if (!loading) {\n      idbPromise(\"products\", \"get\").then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!category || category === \"All\") {\n      return state.products;\n    }\n\n    return state.products.filter(\n      (product) => product.category.name === category\n    );\n  }\n  const filteredProducts = filterProducts();\n  console.log(filteredProducts);\n  console.log(state.products);\n  console.log(category);\n  return (\n    <Container>\n      <div className=\"titleBg mt-5 mb-5\">\n        <h2>{category}</h2>\n      </div>\n\n      {state.products.length ? (\n        <Row xs={1} md={4} className=\"g-4\">\n          {filteredProducts.map((product) => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n            />\n          ))}\n        </Row>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </Container>\n  );\n}\n\nexport default ProductList;\n","import React from \"react\";\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\n\r\nfunction HomeCarousel() {\r\n  return (\r\n    <Carousel>\r\n      <Carousel.Item>\r\n        <img\r\n          className=\"d-block w-100\"\r\n          src=\"/images/image1.png\"\r\n          alt=\"First slide\"\r\n        />\r\n        {/* <Carousel.Caption>\r\n      <h3>First slide label</h3>\r\n      <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n    </Carousel.Caption> */}\r\n      </Carousel.Item>\r\n      <Carousel.Item>\r\n        <img\r\n          className=\"d-block w-100\"\r\n          src=\"/images/image2.png\"\r\n          alt=\"Second slide\"\r\n        />\r\n\r\n        {/* <Carousel.Caption>\r\n      <h3>Second slide label</h3>\r\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n    </Carousel.Caption> */}\r\n      </Carousel.Item>\r\n      <Carousel.Item>\r\n        <img\r\n          className=\"d-block w-100\"\r\n          src=\"/images/image3.png\"\r\n          alt=\"Third slide\"\r\n        />\r\n\r\n        {/* <Carousel.Caption>\r\n      <h3>Third slide label</h3>\r\n      <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\r\n    </Carousel.Caption> */}\r\n      </Carousel.Item>\r\n    </Carousel>\r\n  );\r\n}\r\nexport default HomeCarousel;\r\n","import React from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport HomeCarousel from \"../components/HomeCarousel\";\n// import Cart from \"../components/Cart\";\nimport { Container } from \"react-bootstrap\";\n\nconst Home = () => {\n  return (\n    <div>\n      <HomeCarousel />\n      <Container>\n      <div className=\"titleBg mt-5 mb-5\">\n        <h2 className=\"home-product-title\">New Arrivals</h2>\n      </div>\n        <ProductList /><br/><br/>\n      </Container>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n// import { Link } from \"react-router-dom\";\n\nimport { Container, Row, Col, } from \"react-bootstrap\";\n\n\n\nfunction About() {\n  \n  return (\n    <Container fluid>\n      <Container>\n        <Row className=\"no-gutters\">\n          <Col lg={5} md={6} sm={12} className=\"p-5 m-auto\">\n            <h1 className=\"mt-3 mb-5 text-left rounded text-color\">\n              About us\n            </h1>\n            <Row>\n                <div>\n                \"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?\"\n\n                </div>\n              </Row>\n          </Col>\n\n          <Col lg={7} md={6} sm={12} className=\"rounded-lg\">\n            <div className=\"text-center\">\n              <img src=\"/images/about-01.png\" alt=\"\" className=\"img-fluid\" />\n            </div>\n          </Col>\n        </Row>\n      </Container>\n      {/* <Row className=\"text-center contact-row\">\n        <Col>\n          <Button className=\"button-class mb-2\">\n            <FontAwesomeIcon icon={faMapMarker} />\n          </Button>\n          <p>Broadview, SA 5083</p>\n          <p>Australia</p>\n        </Col>\n        <Col>\n          <Button className=\"button-class mb-2\">\n            <FontAwesomeIcon icon={faPhone} />\n          </Button>\n          <p>+61 123456789</p>\n          <p>Monday - Friday, 8:00 am - 05:00 pm</p>\n        </Col>\n        <Col>\n          <Button className=\"button-class mb-2\">\n            <FontAwesomeIcon icon={faEnvelope} />\n          </Button>\n          <p>info@ajs-boutique.com.au</p>\n          <p>sale@ajs-boutique.com.au</p>\n        </Col>\n      </Row> */}\n    </Container>\n  );\n}\n\nexport default About;\n","// import React, { useState } from \"react\";\n// import { useStoreContext } from \"../utils/GlobalState\";\nimport ProductList from \"../components/ProductList\";\n// import CategoryMenu from \"../components/CategoryMenu\";\n// import { useParams } from \"react-router-dom\";\n// import HomeCarousel from \"../components/HomeCarousel\";\n// import Cart from \"../components/Cart\";\nimport { Container } from \"react-bootstrap\";\n// import { UPDATE_CURRENT_CATEGORY } from \"../utils/actions\";\n\nconst Products = () => {\n  // const [state] = useStoreContext();\n  // const { category } = useParams();\n  // const { products } = state;\n  // const [products, setProducts ] = useState(...state.products);\n  // // const [setCurrentProduct ] = useState({});\n  // if (state.products.length) {\n  //   setProducts(\n  //     state.products.find(\n  //       (product) => product.category.name === category\n  //     )\n  //   );\n  // }\n  return (\n    <Container fluid>\n      <ProductList /><br/><br/>\n    </Container>\n  );\n};\n\nexport default Products;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faStar,\n  faCartPlus,\n  faHeart,\n  faShoppingCart,\n  faMinus,\n  faPlus,\n} from \"@fortawesome/free-solid-svg-icons\";\n\n// import Cart from '../components/Cart';\nimport { useStoreContext } from '../utils/GlobalState';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id,\n    });\n\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"container-fluid mt-3\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"row mb-3\">\n              <div className=\"col-md-5 text-center\">\n                <img\n                  src={`/images/${currentProduct.image}`}\n                  alt={currentProduct.name}\n                  className=\"img-fluid mb-3\"\n                  \n                />\n                \n              </div>\n              <div className=\"col-md-7\">\n                <h1 className=\"h5 d-inline mr-2\">\n                {currentProduct.name}\n                </h1>\n\n                <div className=\"mb-3\">\n                  <FontAwesomeIcon icon={faStar} className=\"text-warning mr-1\" />\n                  <FontAwesomeIcon icon={faStar} className=\"text-warning mr-1\" />\n                  <FontAwesomeIcon icon={faStar} className=\"text-warning mr-1\" />\n                  <FontAwesomeIcon icon={faStar} className=\"text-warning mr-1\" />\n                  <FontAwesomeIcon icon={faStar} className=\"text-secondary mr-1\" />|{\" \"}\n                  <span className=\"text-muted small\">\n                    42 ratings and 4 reviews\n                  </span>\n                </div>\n                <dl className=\"row small mb-3\">\n                  <dt className=\"col-sm-3\">Availability</dt>\n                  <dd className=\"col-sm-9\">In stock</dd>\n                  <dt className=\"col-sm-3\">Sold by</dt>\n                  <dd className=\"col-sm-9\">Authorised Store</dd>\n                  <dt className=\"col-sm-3\">Size</dt>\n                  <dd className=\"col-sm-9\">\n                    <div className=\"form-check form-check-inline\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"radio\"\n                        name=\"size\"\n                        id=\"sizes\"\n                        disabled\n                      />\n                      <label className=\"form-check-label\" htmlFor=\"sizes\">\n                        S\n                      </label>\n                    </div>\n                    <div className=\"form-check form-check-inline\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"radio\"\n                        name=\"size\"\n                        id=\"sizem\"\n                        disabled\n                      />\n                      <label className=\"form-check-label\" htmlFor=\"sizem\">\n                        M\n                      </label>\n                    </div>\n                    <div className=\"form-check form-check-inline\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"radio\"\n                        name=\"size\"\n                        id=\"sizel\"\n                      />\n                      <label className=\"form-check-label\" htmlFor=\"sizel\">\n                        L\n                      </label>\n                    </div>\n                    <div className=\"form-check form-check-inline\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"radio\"\n                        name=\"size\"\n                        id=\"sizexl\"\n                      />\n                      <label className=\"form-check-label\" htmlFor=\"sizexl\">\n                        XL\n                      </label>\n                    </div>\n                    <div className=\"form-check form-check-inline\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"radio\"\n                        name=\"size\"\n                        id=\"sizexxl\"\n                      />\n                      <label className=\"form-check-label\" htmlFor=\"sizexxl\">\n                        XXL\n                      </label>\n                    </div>\n                  </dd>\n                  <dt className=\"col-sm-3\">Color</dt>\n                  <dd className=\"col-sm-9\">\n                    <button className=\"btn btn-sm btn-primary p-2 mx-1\"> </button>\n                    <button className=\"btn btn-sm btn-secondary p-2 mx-1\"> </button>\n                    <button className=\"btn btn-sm btn-success p-2 mx-1\"> </button>\n                    <button className=\"btn btn-sm btn-danger p-2 mx-1\"> </button>\n                    <button className=\"btn btn-sm btn-warning p-2 mx-1\"> </button>\n                    <button className=\"btn btn-sm btn-info p-2 mx-1\"> </button>\n                    <button className=\"btn btn-sm btn-dark p-2 mx-1\"> </button>\n                  </dd>\n                </dl>\n\n                <div className=\"mb-3\">\n                  <span className=\"font-weight-bold h5 mr-2\">${currentProduct.price}{' '}</span>\n                </div>\n                <div className=\"mb-3 w-50\">\n                  <div className=\"d-inline float-left mr-2\">\n                    <div className=\"input-group input-group-sm mw-140\">\n                      <button\n                        className=\"btn btn-primary text-white button-class\"\n                        type=\"button\"\n                      >\n                        <FontAwesomeIcon icon={faMinus} />\n                      </button>\n                      <input\n                        type=\"text\"\n                        className=\"form-control w-25\"\n                        defaultValue=\"1\"\n                      />\n                      <button\n                        className=\"btn btn-primary text-white button-class\"\n                        type=\"button\"\n                      >\n                        <FontAwesomeIcon icon={faPlus} />\n                      </button>\n                    </div>\n                  </div>\n                  <button onClick={addToCart}\n                    type=\"button\"\n                    className=\"btn btn-sm btn-primary mr-2 my-2 button-class\"\n                    title=\"Add to cart\"\n                  >\n                    <FontAwesomeIcon icon={faCartPlus} /> Add to cart\n                  </button>\n                  <button disabled={!cart.find((p) => p._id === currentProduct._id)}\n              onClick={removeFromCart}\n                    type=\"button\"\n                    className=\"btn btn-sm btn-warning mx-2 my-2\"\n                    title=\"Remove\"\n                  >\n                    <FontAwesomeIcon icon={faShoppingCart} /> Remove from cart\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-sm btn-outline-secondary\"\n                    title=\"Add to wishlist\"\n                  >\n                    <FontAwesomeIcon icon={faHeart} />\n                  </button>\n                </div>\n                <div>\n                  <dt className=\"font-weight-600 mb-2\">\n                    Product Description\n                  </dt>\n                  <p>{currentProduct.description}</p>\n                </div>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                {/* <nav>\n                  <div className=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\n                    <a\n                      className=\"nav-link active\"\n                      id=\"nav-details-tab\"\n                      data-toggle=\"tab\"\n                      href=\"#nav-details\"\n                      role=\"tab\"\n                      aria-controls=\"nav-details\"\n                      aria-selected=\"true\"\n                    >\n                      Details\n                    </a>\n                    <a\n                      className=\"nav-link\"\n                      id=\"nav-randr-tab\"\n                      data-toggle=\"tab\"\n                      href=\"#nav-randr\"\n                      role=\"tab\"\n                      aria-controls=\"nav-randr\"\n                      aria-selected=\"false\"\n                    >\n                      Ratings & Reviews\n                    </a>\n                    <a\n                      className=\"nav-link\"\n                      id=\"nav-faq-tab\"\n                      data-toggle=\"tab\"\n                      href=\"#nav-faq\"\n                      role=\"tab\"\n                      aria-controls=\"nav-faq\"\n                      aria-selected=\"false\"\n                    >\n                      Questions and Answers\n                    </a>\n                    <a\n                      className=\"nav-link\"\n                      id=\"nav-ship-returns-tab\"\n                      data-toggle=\"tab\"\n                      href=\"#nav-ship-returns\"\n                      role=\"tab\"\n                      aria-controls=\"nav-ship-returns\"\n                      aria-selected=\"false\"\n                    >\n                      Shipping & Returns\n                    </a>\n                    <a\n                      className=\"nav-link\"\n                      id=\"nav-size-chart-tab\"\n                      data-toggle=\"tab\"\n                      href=\"#nav-size-chart\"\n                      role=\"tab\"\n                      aria-controls=\"nav-size-chart\"\n                      aria-selected=\"false\"\n                    >\n                      Size Chart\n                    </a>\n                  </div>\n                </nav> */}\n                {/* <div className=\"tab-content p-3 small\" id=\"nav-tabContent\">\n                  <div\n                    className=\"tab-pane fade show active\"\n                    id=\"nav-details\"\n                    role=\"tabpanel\"\n                    aria-labelledby=\"nav-details-tab\"\n                  >\n                    <Details />\n                  </div>\n                  <div\n                    className=\"tab-pane fade\"\n                    id=\"nav-randr\"\n                    role=\"tabpanel\"\n                    aria-labelledby=\"nav-randr-tab\"\n                  >\n                    {Array.from({ length: 5 }, (_, key) => (\n                      <RatingsReviews key={key} />\n                    ))}\n                  </div>\n                  <div\n                    className=\"tab-pane fade\"\n                    id=\"nav-faq\"\n                    role=\"tabpanel\"\n                    aria-labelledby=\"nav-faq-tab\"\n                  >\n                    <dl>\n                      {Array.from({ length: 5 }, (_, key) => (\n                        <QuestionAnswer key={key} />\n                      ))}\n                    </dl>\n                  </div>\n                  <div\n                    className=\"tab-pane fade\"\n                    id=\"nav-ship-returns\"\n                    role=\"tabpanel\"\n                    aria-labelledby=\"nav-ship-returns-tab\"\n                  >\n                    <ShippingReturns />\n                  </div>\n                  <div\n                    className=\"tab-pane fade\"\n                    id=\"nav-size-chart\"\n                    role=\"tabpanel\"\n                    aria-labelledby=\"nav-size-chart-tab\"\n                  >\n                    <SizeChart />\n                  </div>\n                </div> */}\n              </div>\n            </div>\n          </div>\n          {/* <div className=\"col-md-4\">\n            <CardFeaturedProduct data={data.products} />\n            <CardServices />\n          </div> */}\n        </div>\n      </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      {/* <Cart /> */}\n    </>\n  );\n}\n\nexport default Detail;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\nimport {Container, Row, Col, Form, Button} from \"react-bootstrap\";\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    \n    <Container>\n       \n        <Row className=\"no-gutters\">\n          <Col lg={5} md={6} sm={12} className=\"p-5 m-auto\">\n          <h1 className=\"mt-5 mb-5 text-left rounded text-color\">Login</h1>\n            <form onSubmit={handleFormSubmit}>\n\n                <Form.Group>\n                  <Form.Label className=\"mb-2\">Email address</Form.Label>\n\n                  <Form.Control className=\"mb-2\" name=\"email\" type=\"email\" id=\"email\" placeholder=\"Enter email\" onChange={handleChange} />\n                </Form.Group>\n\n                \n                <Form.Group>\n                    <Form.Label className=\"mb-2\">Password</Form.Label>\n\n                    <Form.Control className=\"mb-2\" name=\"password\" type=\"password\" id=\"pwd\" placeholder=\"Password\" onChange={handleChange} />\n                </Form.Group>\n\n                {error ? (\n                  <Form.Group>\n                  <Form.Text className=\"mb-2\">The provided credentials are incorrect.</Form.Text>\n                  </Form.Group> \n                ) : null}\n                \n                <br />\n                <Button variant=\"success btn-block button-class\" type=\"submit\">\n                    Login\n                </Button>\n                \n            </form>\n            \n            <div className=\"mt-5 text-left\">Don't have an account? <Link to={'/signup'}> Register here</Link></div>\n          </Col>\n\n          <Col lg={7} md={6} sm={12} className=\"rounded-lg\">\n          <div className=\"text-center\">\n                <img\n                  src=\"/images/login-img03.png\"\n                  alt=\"\"\n                  className=\"img-fluid\"\n                  \n                />\n                \n              </div>\n          </Col>\n      </Row>\n    </Container>\n    \n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nimport {Container, Row, Col, Form, Button} from \"react-bootstrap\";\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <Container>\n       \n        <Row className=\"no-gutters\">\n          <Col lg={5} md={6} sm={12} className=\"p-5 m-auto\">\n          <h1 className=\"mt-5 mb-5 text-left rounded text-color\">Signup</h1>\n            <form onSubmit={handleFormSubmit}>\n\n                <Form.Group>\n                  <Form.Label className=\"mb-2\">First Name:</Form.Label>\n\n                  <Form.Control className=\"mb-2\" name=\"firstName\" type=\"firstName\" id=\"firstName\" placeholder=\"First name\" onChange={handleChange} />\n                </Form.Group>\n\n                <Form.Group>\n                  <Form.Label className=\"mb-2\">Last Name:</Form.Label>\n\n                  <Form.Control className=\"mb-2\" name=\"lastName\" type=\"lastName\" id=\"lastName\" placeholder=\"Last name\" onChange={handleChange} />\n                </Form.Group>\n\n                <Form.Group>\n                  <Form.Label className=\"mb-2\">Email address</Form.Label>\n\n                  <Form.Control className=\"mb-2\" name=\"email\" type=\"email\" id=\"email\" placeholder=\"Enter email\" onChange={handleChange} />\n                </Form.Group>\n\n                \n                <Form.Group>\n                    <Form.Label className=\"mb-2\">Password</Form.Label>\n\n                    <Form.Control className=\"mb-2\" name=\"password\" type=\"password\" id=\"pwd\" placeholder=\"Password\" onChange={handleChange} />\n                </Form.Group>\n\n                <br />\n                <Button variant=\"success btn-block button-class\" type=\"submit\">\n                    Signup\n                </Button>\n                \n            </form>\n            \n            <div className=\"mt-5 text-left\">Already registered? <Link to={'/login'}> Login here</Link></div>\n          </Col>\n\n          <Col lg={7} md={6} sm={12} className=\"rounded-lg\">\n          <div className=\"text-center\">\n                <img\n                  src=\"/images/signup-03.png\"\n                  alt=\"\"\n                  className=\"img-fluid\"\n                  \n                />\n                \n              </div>\n          </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Signup;\n\n","import React, { useState } from \"react\";\n// import { Link } from \"react-router-dom\";\n\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faEnvelope,\n  faPhone,\n  faMapMarker,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nfunction Contact() {\n  const [validated, setValidated] = useState(false);\n\n  const handleSubmitContact = (event) => {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n  };\n  return (\n    <Container fluid>\n      <Container>\n        <Row className=\"no-gutters\">\n          <Col lg={5} md={6} sm={12} className=\"p-5 m-auto\">\n            <h1 className=\"mt-3 mb-5 text-left rounded text-color\">\n              Contact us\n            </h1>\n            <Form\n              noValidate\n              validated={validated}\n              onSubmit={handleSubmitContact}\n            >\n              <Row className=\"mb-3\">\n                <Form.Group as={Col} lg={6} md={6} sm={12}>\n                  <Form.Label>First name</Form.Label>\n                  <Form.Control required type=\"text\" placeholder=\"Your name\" />\n                  <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                </Form.Group>\n                <Form.Group as={Col} lg={6} md={6} sm={12}>\n                  <Form.Label>Last name</Form.Label>\n                  <Form.Control required type=\"text\" placeholder=\"Last name\" />\n                  <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                </Form.Group>\n              </Row>\n              <Row className=\"mb-3\">\n                <Form.Group>\n                  <Form.Label>Email address</Form.Label>\n                  <Form.Control\n                    type=\"email\"\n                    placeholder=\"Your email\"\n                    id=\"email\"\n                    required\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please choose a correct email.\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Row>\n              <Row>\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Textarea</Form.Label>\n                  <Form.Control as=\"textarea\" rows={3} />\n                </Form.Group>\n              </Row>\n              <Button className=\"button-class\" type=\"submit\">Submit form</Button>\n            </Form>\n          </Col>\n\n          <Col lg={7} md={6} sm={12} className=\"rounded-lg\">\n            <div className=\"text-center\">\n              <img src=\"/images/contact-01.png\" alt=\"\" className=\"img-fluid\" />\n            </div>\n          </Col>\n        </Row>\n      </Container>\n      <Row className=\"text-center contact-row\">\n        <Col>\n          <Button className=\"button-class mb-2\">\n            <FontAwesomeIcon icon={faMapMarker} />\n          </Button>\n          <p>Broadview, SA 5083</p>\n          <p>Australia</p>\n        </Col>\n        <Col>\n          <Button className=\"button-class mb-2\">\n            <FontAwesomeIcon icon={faPhone} />\n          </Button>\n          <p>+61 123456789</p>\n          <p>Monday - Friday, 8:00 am - 05:00 pm</p>\n        </Col>\n        <Col>\n          <Button className=\"button-class mb-2\">\n            <FontAwesomeIcon icon={faEnvelope} />\n          </Button>\n          <p>info@ajs-boutique.com.au</p>\n          <p>sale@ajs-boutique.com.au</p>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Contact;\n","import React from \"react\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nimport { Table, Container, Row } from \"react-bootstrap\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTrashCan,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst CartItem = ({ item }) => {\n  const [, dispatch] = useStoreContext();\n\n  const removeFromCart = (item) => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id,\n    });\n    idbPromise(\"cart\", \"delete\", { ...item });\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === \"0\") {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id,\n      });\n      idbPromise(\"cart\", \"delete\", { ...item });\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value),\n      });\n      idbPromise(\"cart\", \"put\", { ...item, purchaseQuantity: parseInt(value) });\n    }\n  };\n\n  return (\n    <Container>\n      <Row>\n        <Table responsive>\n          <thead>\n            <tr>\n              <th>Product image</th>\n              <th>Product name</th>\n              <th>Price</th>\n              <th>Qty</th>\n              <th>Remove</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>\n                <img src={`/images/${item.image}`} alt=\"\" />\n              </td>\n              <td>{item.name}</td>\n              <td>${item.price}</td>\n              <td>\n                <input\n                  type=\"number\"\n                  placeholder=\"1\"\n                  value={item.purchaseQuantity}\n                  onChange={onChange}\n                />\n              </td>\n              <td>\n                <span\n                  role=\"img\"\n                  aria-label=\"trash\"\n                  onClick={() => removeFromCart(item)}\n                >\n                  {\" \"}\n                  <FontAwesomeIcon icon={faTrashCan} />{\" \"}\n                </span>\n              </td>\n            </tr>\n          </tbody>\n        </Table>\n      </Row>\n    </Container>\n  );\n};\n\nexport default CartItem;\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport './style.css';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faShoppingCart, faXmark } from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n  const [state, dispatch] = useStoreContext();\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  function submitCheckout() {\n    const productIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { products: productIds },\n    });\n  }\n\n  if (!state.cartOpen) {\n    return (\n      \n      <FontAwesomeIcon icon={faShoppingCart} className=\"text-fontAwe text-light cart-closed\" onClick={toggleCart}/>\n      \n    );\n  }\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>\n      <FontAwesomeIcon icon={faXmark} />\n      </div>\n      <h2>Shopping Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"flex-row space-between \">\n            <strong>Total: <span className='text-color'>${calculateTotal()} </span></strong>\n\n            {Auth.loggedIn() ? (\n              <button onClick={submitCheckout}>Checkout</button>\n            ) : (\n              <span>(<Link to={'/login'}>Login in</Link> to check out)</span>\n            )}\n          </div>\n        </div>\n      ) : (\n        <p>\n          You haven't added anything to your cart yet!\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;","import React from \"react\";\r\nimport Auth from \"../../utils/auth\";\r\n\r\n// import CategoryMenu from \"../CategoryMenu\"\r\n\r\nimport { Nav } from 'react-bootstrap';\r\nimport Cart from \"../Cart\";\r\n\r\nfunction Header() {\r\n  function showNavigation() {\r\n    if (Auth.loggedIn()) {\r\n      return (\r\n        <Nav className=\"justify-content-end \">\r\n        <Nav.Link href=\"/orderHistory\">Order History</Nav.Link>\r\n        <Nav.Link onClick={() => Auth.logout()} href=\"/\" >Logout</Nav.Link>\r\n        <Cart />\r\n      </Nav>\r\n      \r\n      );\r\n    } else {\r\n      return (\r\n        <Nav className=\"justify-content-end \">\r\n        <Nav.Link href=\"/login\">Login</Nav.Link>\r\n        <Nav.Link href=\"/signup\">Signup</Nav.Link>\r\n        <Cart />\r\n      </Nav>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Nav className=\"justify-content-end customTopNavCss\">\r\n      {showNavigation()}\r\n    </Nav>\r\n\r\n    \r\n\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useEffect } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport {\n  UPDATE_CATEGORIES,\n  // UPDATE_CURRENT_CATEGORY,\n} from \"../../utils/actions\";\nimport { QUERY_CATEGORIES } from \"../../utils/queries\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport { Nav } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nfunction CategoryMenu() {\n  const [state, dispatch] = useStoreContext();\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise(\"categories\", \"put\", category);\n      });\n    } else if (!loading) {\n      idbPromise(\"categories\", \"get\").then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  // const handleClick = (id) => {\n  //   dispatch({\n  //     type: UPDATE_CURRENT_CATEGORY,\n  //     currentCategory: id,\n  //   });\n  // };\n\n  return (\n    <Nav>\n      {categories.map((item) => (\n        <Nav.Item className=\"nav-link\" key={item.name}>\n          <Link to={`/products/${item.name}`}>{item.name}</Link>\n        </Nav.Item>\n      ))}\n    </Nav>\n  );\n}\n\nexport default CategoryMenu;\n","import React from \"react\";\nimport CategoryMenu from \"../CategoryMenu\";\n// import Header from \"../Header\";\n// import Auth from \"../../utils/auth\";\n// import { Link } from \"react-router-dom\";\n\nimport { Navbar, Container, Nav } from 'react-bootstrap';\n\nfunction NavHeader() {\n\n  return (\n    <Navbar className=\"navbar customNav\" collapseOnSelect expand=\"lg\" >\n    <Container>\n    \n    <Navbar.Brand href=\"/\">AJ's - Boutique</Navbar.Brand>\n    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n    <Navbar.Collapse id=\"responsive-navbar-nav\">\n      <Nav className=\"justify-content-center customNavLinks\" >\n          <CategoryMenu />\n         <Nav.Link href=\"/about\">About us</Nav.Link>\n         <Nav.Link href=\"/contact\">Contact us</Nav.Link>\n      </Nav>\n    </Navbar.Collapse>\n    </Container>\n\n  </Navbar>\n  );\n}\n\nexport default NavHeader;\n","import React from 'react';\n\n\nconst Footer = () => <footer className=\"page-footer font-small blue pt-4 \">\n    <div className=\"container-fluid text-center text-md-left my-20\">\n        <div className=\"row\">\n            <div className=\"col-md-6 mt-md-0 mt-3\">\n                <h5 className=\"text-uppercase\">Our promise</h5>\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. </p>\n            </div>\n\n            <hr className=\"clearfix w-100 d-md-none pb-0\"/>\n\n            <div className=\"col-md-3 mb-md-0 mb-3\">\n                <h5 className=\"text-uppercase\">Special offer</h5>\n                <ul className=\"list-unstyled\">\n                    <li><a href=\"#!\">Black Friday</a></li>\n                    <li><a href=\"#!\">New Arrivals</a></li>\n                </ul>\n            </div>\n\n            <div className=\"col-md-3 mb-md-0 mb-3\">\n                <h5 className=\"text-uppercase\">Follow us</h5>\n                <ul className=\"list-unstyled\">\n                    <li><a href=\"#!\">Facebook</a></li>\n                    <li><a href=\"#!\">Instagram</a></li>\n                </ul>\n            </div>\n        </div>\n    </div>\n\n    <div className=\"footer-copyright text-center py-3\">© 2022 Copyright: \n        <a href=\"/\"> ajs-boutique.com.au</a>\n    </div>\n\n</footer>\n\nexport default Footer","import React, { useEffect } from \"react\";\nimport { useMutation } from \"@apollo/client\";\n// import Jumbotron from '../components/Jumbotron';\nimport { ADD_ORDER } from \"../utils/mutations\";\nimport { idbPromise } from \"../utils/helpers\";\nimport Modal from \"react-bootstrap/Modal\";\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise(\"cart\", \"get\");\n      const products = cart.map((item) => item._id);\n\n      if (products.length) {\n        const { data } = await addOrder({ variables: { products } });\n        const productData = data.addOrder.products;\n\n        productData.forEach((item) => {\n          idbPromise(\"cart\", \"delete\", item);\n        });\n      }\n\n      setTimeout(() => {\n        window.location.assign(\"/\");\n      }, 3000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <Modal.Dialog>\n      <Modal.Header closeButton>\n        <Modal.Title>Success!</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <p>Thank you for your purchase!</p>\n        <p>You will now be redirected to the home page</p>\n      </Modal.Body>\n\n      {/* <Modal.Footer>\n    <Button variant=\"secondary\">Close</Button>\n    <Button variant=\"primary\">Save changes</Button>\n  </Modal.Footer> */}\n    </Modal.Dialog>\n  );\n}\n\nexport default Success;\n","import React from \"react\";\n// import { Link } from 'react-router-dom';\n\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_USER } from \"../utils/queries\";\n\nimport { Container, Table, Row, Col } from \"react-bootstrap\";\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <Container>\n      <Row className=\"mt-5 mb-5\">\n        \n        <Col>\n        \n      {user ? (\n        <>\n        <p> Hello, {user.firstName} {user.lastName}. Thank you for shopping with us. </p> \n        <h3>Order History</h3>\n          {user.orders.map((order) => (\n            <div key={order._id}>\n              {order.products.map(\n                ({ _id, image, name, price, description }, index) => (\n                  <div key={index}>\n                    \n                    <Table responsive bordered >\n                      <thead>\n                        <tr>\n                          <th>Order date</th>\n                          <th>Product image</th>\n                          <th>Product name</th>\n                          <th>Product description</th>\n                          <th>Price</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr>\n                          <td>\n                            {new Date(\n                              parseInt(order.purchaseDate)\n                            ).toLocaleDateString()}\n                          </td>\n                          <td>\n                            <img\n                              className=\"orderHistoryimg\"\n                              alt={name}\n                              src={`/images/${image}`}\n                            />\n                          </td>\n                          <td>{name}</td>\n                          <td>{description}</td>\n                          <td>${price}</td>\n                        </tr>\n                      </tbody>\n                    </Table>\n                  </div>\n                )\n              )}\n            </div>\n          ))}\n        </>\n      ) : null}\n      </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default OrderHistory;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\n\nimport Home from \"./pages/Home\";\nimport About from \"./pages/About\";\nimport Products from \"./pages/Products\";\nimport Detail from \"./pages/Detail\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Contact from \"./pages/Contact\";\nimport Header from \"./components/Header\";\nimport NavHeader from \"./components/NavHeader\";\nimport Footer from \"./components/Footer\";\nimport { StoreProvider } from \"./utils/GlobalState\";\nimport Success from \"./pages/Success\";\nimport OrderHistory from \"./pages/OrderHistory\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"id_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <StoreProvider>\n          <Header />\n          <NavHeader />\n\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/about\" component={About} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/signup\" component={Signup} />\n            <Route exact path=\"/products/:category\" component={Products} />\n            <Route exact path=\"/success\" component={Success} />\n            <Route exact path=\"/orderHistory\" component={OrderHistory} />\n            <Route exact path=\"/detail/:id\" component={Detail} />\n            <Route exact path=\"/contact\" component={Contact} />\n            <Route component={NoMatch} />\n          </Switch>\n        </StoreProvider>\n\n        <Footer />\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}